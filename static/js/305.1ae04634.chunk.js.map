{"version":3,"file":"static/js/305.1ae04634.chunk.js","mappings":"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","sources":["components/AppMainView/AppMainView.styled.jsx","components/ContactForm/ContactForm.styled.jsx","hooks/contactsHook.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/Box/Box.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactLIst/ContactList.styled.jsx","components/ContactLIst/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/AppMainView/AppMainView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  \n`;\n\nexport const Title = styled.h2`\n  \n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input``;\n\nexport const Button = styled.button``;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, changeFilter } from 'redux/contacts';\n\nexport const useContacts = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const loader = useSelector(state => state.contacts.loader);\n  const addLoader = useSelector(state => state.contacts.addLoader);\n  const error = useSelector(state => state.contacts.error);\n  const dispatch = useDispatch();\n\n  const getContacts = () => {\n    dispatch(contactsOperations.getContacts());\n  };\n\n  const addContact = data => {\n    dispatch(contactsOperations.addContact(data));\n  };\n\n  const deleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n  const editContact = ({ id, name, number }) => {\n    dispatch(contactsOperations.editContact({ id, name, number }));\n  };\n\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  return {\n    contacts,\n    filter,\n    loader,\n    addLoader,\n    error,\n    getContacts,\n    addContact,\n    deleteContact,\n    editContact,\n    setFilter,\n  };\n};\n","import { useState } from 'react';\nimport { useId } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useContacts } from 'hooks';\nimport parsePhoneNumber from 'libphonenumber-js';\nimport toast from 'react-hot-toast';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = useId();\n  const numberId = useId();\n  const { contacts, addLoader, addContact } = useContacts();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleFormatPhoneNumber = () => {\n    const phoneNumber = parsePhoneNumber(`+${number}`);\n    return phoneNumber.getURI();\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (contacts.find(user => user.name.toLowerCase() === name.toLowerCase())) {\n      toast.error(`This contact: '${name}' is already in phonebook`, {\n        duration: 2000,\n        position: 'top-center',\n      });\n      resetForm();\n      return;\n    }\n\n    addContact({ name, number: handleFormatPhoneNumber() });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label htmlFor={nameId}>Name</Label>\n      <Input\n        id={nameId}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleInputChange}\n        placeholder=\"full name\"\n      />\n\n      <Label htmlFor={numberId}>Number</Label>\n      <Input\n        id={numberId}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleInputChange}\n        placeholder=\"phone number xxx-xx-xx\"\n      />\n\n      <Button disabled={addLoader}>\n        {' '}\n        {addLoader ? 'Adding...' : 'Add contact'}\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  dispatch: PropTypes.func,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: 500;\n  width: 100%;\n  &:not(:last-child) {\n  }\n`;\n\nexport const Button = styled.button`\n  width: 75px;\n  height: 25px;\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 7px #fff;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Box = styled.div``;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Item, Button } from './ContactListItem.styled';\nimport { useContacts } from 'hooks';\nimport { Box } from 'components/Box/Box';\nimport toast from 'react-hot-toast';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const [currentId, setCurrentId] = useState(null);\n  const [editedName, setEditedName] = useState(name);\n  const [editedNumber, setEditedNumber] = useState(number);\n  const [isEdited, setIsEdited] = useState(false);\n  const { contacts, loader, deleteContact, editContact } = useContacts();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'editedName':\n        return setEditedName(value);\n      case 'editedNumber':\n        return setEditedNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const updateContact = () => {\n    if (isEdited) {\n      if (name === editedName && number === editedNumber) {\n        setIsEdited(state => !state);\n        return;\n      }\n      if (\n        contacts.find(\n          contact =>\n            contact.name.toLowerCase() === editedName.toLowerCase() &&\n            contact.id !== id\n        )\n      ) {\n        toast(`Name ${editedName} exist`);\n        return;\n      }\n      editContact({ id, name: editedName, number: editedNumber });\n    }\n    setIsEdited(state => !state);\n  };\n\n  return (\n    <Item>\n      {isEdited ? (\n        <>\n          <input\n            typeof=\"text\"\n            name=\"editedName\"\n            value={editedName}\n            onChange={handleChange}\n          />\n          <input\n            typeof=\"text\"\n            name=\"editedNumber\"\n            value={editedNumber}\n            onChange={handleChange}\n          />\n        </>\n      ) : (\n        <>\n          <span>{name}:</span>\n          <span>{number}</span>\n        </>\n      )}\n      <Box>\n        <Button onClick={updateContact}>{isEdited ? 'Save' : 'Edit'}</Button>\n        <Button\n          disabled={currentId}\n          onClick={() => {\n            deleteContact(id);\n            setCurrentId(id);\n          }}\n        >\n          {loader && currentId ? 'Deleting...' : 'Delete'}\n        </Button>\n      </Box>\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul``;\n","import PropTypes from 'prop-types';\nimport ContactListItem from 'components/ContactListItem';\nimport { List } from './ContactList.styled';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n`;\n\nexport const Input = styled.input.attrs({\n  type: 'text',\n})`\n  width: 200px;\n`;\n","import { Label, Input } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <Label>\n    Filter:\n    <Input name=\"filter\" value={value} onChange={onChange} />\n  </Label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Container, Title } from './AppMainView.styled';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactLIst';\nimport Filter from 'components/Filter';\nimport { Box } from 'components/Box/Box';\nimport Spinner from 'components/Spinner';\nimport { useContacts } from 'hooks';\nimport { contactsOperations } from 'redux/contacts';\n\nconst AppMainView = () => {\n  const dispatch = useDispatch();\n  const { contacts, filter, loader, setFilter } = useContacts();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const handleFilterInput = event => {\n    const { value } = event.target;\n    setFilter(value);\n  };\n\n  const filterContacts = () => {\n    if (contacts.length !== 0 && typeof contacts !== 'string') {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n    return [];\n  };\n\n  const filteredContacts = filterContacts();\n\n  return (\n    <Box>\n      <Container>\n        <Title>Phonebook</Title>\n        <ContactForm />\n\n        <Title>Contacts</Title>\n        <Box>\n          <Filter value={filter} onChange={handleFilterInput} />\n          <h3>Total contacts: {filteredContacts.length}</h3>\n        </Box>\n\n        {loader ? (\n          Spinner.threeCircles\n        ) : (\n          <ContactList contacts={filteredContacts} />\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default AppMainView;\n"],"names":["Container","styled","Title","Form","Label","Input","Button","useContacts","contacts","useSelector","state","items","filter","loader","addLoader","error","dispatch","useDispatch","getContacts","contactsOperations","addContact","data","deleteContact","id","editContact","name","number","setFilter","value","changeFilter","useState","setName","setNumber","nameId","useId","numberId","handleInputChange","event","target","resetForm","onSubmit","preventDefault","find","user","toLowerCase","toast","duration","position","parsePhoneNumber","getURI","autoComplete","htmlFor","type","pattern","title","required","onChange","placeholder","disabled","Item","Box","currentId","setCurrentId","editedName","setEditedName","editedNumber","setEditedNumber","isEdited","setIsEdited","handleChange","e","typeof","onClick","contact","List","map","useEffect","filteredContacts","length","normalizedFilter","includes","filterContacts","Spinner"],"sourceRoot":""}