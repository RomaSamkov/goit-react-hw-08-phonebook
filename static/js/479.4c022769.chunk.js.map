{"version":3,"file":"static/js/479.4c022769.chunk.js","mappings":"8QAIaA,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,SAACC,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,YACRC,KAAK,SACLC,GAAI,CACF,UAAW,CACTC,UAAW,IANjB,SAUGN,GAGN,EAEYO,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mJASPE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,0MAeRI,GAAWJ,EAAAA,EAAAA,IAAO,MAAPA,CAAH,sBAERK,GAAaL,EAAAA,EAAAA,IAAO,KAAPA,CAAH,sBCnCnBM,EAAcC,EAAAA,KAAaC,MAAM,CACnCC,KAAMF,EAAAA,KAAaG,SAAS,oBAC5BC,MAAOJ,EAAAA,KAAaI,QACpBC,SAAUL,EAAAA,GACA,uBACPM,IAAI,EAAG,qDACPH,SAAS,0BAGC,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAER,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAChDM,SATiB,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC7BC,QAAQC,IAAIH,GACZJ,EAASQ,EAAAA,GAAAA,SAAwBJ,IACjCC,GACD,EAMGI,iBAAkBlB,EAHpB,UAKE,UAACP,EAAD,YACE,0BACE,SAACM,EAAD,wBAEF,SAACH,EAAD,CACER,KAAK,OACLe,KAAK,OACLgB,YAAY,qBAEd,SAAC,KAAD,CAAchB,KAAK,OAAnB,SACG,SAAAiB,GAAG,OAAI,SAACtB,EAAD,UAAWsB,GAAf,KAEN,SAACxB,EAAD,CACER,KAAK,QACLe,KAAK,QACLgB,YAAY,sBAEd,SAAC,KAAD,CAAchB,KAAK,QAAnB,SACG,SAAAiB,GAAG,OAAI,SAACtB,EAAD,UAAWsB,GAAf,KAEN,SAACxB,EAAD,CACER,KAAK,WACLe,KAAK,WACLgB,YAAY,cAEd,SAAC,KAAD,CAAchB,KAAK,WAAnB,SACG,SAAAiB,GAAG,OAAI,SAACtB,EAAD,UAAWsB,GAAf,KAEN,SAACnC,EAAD,2BAIP,C","sources":["pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport { Button } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const RegBtn = ({ children }) => {\n  return (\n    <Button\n      type=\"submit\"\n      variant=\"contained\"\n      size=\"medium\"\n      sx={{\n        '&:hover': {\n          boxShadow: 4,\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport const RegForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 320px;\n  padding: 20px;\n  margin: 0 auto;\n`;\n\nexport const RegInput = styled(Field)`\n  position: relative;\n  width: 90%;\n  height: 35px;\n  font-size: 22px;\n  background: transparent;\n\n  &::placeholder {\n  }\n  &:hover,\n  &:focus {\n    width: 100%;\n  }\n`;\n\nexport const ErrorMsg = styled('div')``;\n\nexport const AvatarText = styled('h3')``;\n","import { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  RegForm,\n  RegInput,\n  RegBtn,\n  ErrorMsg,\n  AvatarText,\n} from './RegisterPage.styled';\n\nlet loginSchema = yup.object().shape({\n  name: yup.string().required('Name is required'),\n  email: yup.string().email(),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be of minimum 6 characters length')\n    .required('Password is required'),\n});\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (value, { resetForm }) => {\n    console.log(value);\n    dispatch(authOperations.register(value));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={loginSchema}\n    >\n      <RegForm>\n        <div>\n          <AvatarText>SignUp</AvatarText>\n        </div>\n        <RegInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter your name\"\n        ></RegInput>\n        <ErrorMessage name=\"name\">\n          {msg => <ErrorMsg>{msg}</ErrorMsg>}\n        </ErrorMessage>\n        <RegInput\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter your email\"\n        ></RegInput>\n        <ErrorMessage name=\"email\">\n          {msg => <ErrorMsg>{msg}</ErrorMsg>}\n        </ErrorMessage>\n        <RegInput\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n        ></RegInput>\n        <ErrorMessage name=\"password\">\n          {msg => <ErrorMsg>{msg}</ErrorMsg>}\n        </ErrorMessage>\n        <RegBtn>Register</RegBtn>\n      </RegForm>\n    </Formik>\n  );\n}\n"],"names":["RegBtn","children","Button","type","variant","size","sx","boxShadow","RegForm","styled","Form","RegInput","Field","ErrorMsg","AvatarText","loginSchema","yup","shape","name","required","email","password","min","RegisterPage","dispatch","useDispatch","initialValues","onSubmit","value","resetForm","console","log","authOperations","validationSchema","placeholder","msg"],"sourceRoot":""}